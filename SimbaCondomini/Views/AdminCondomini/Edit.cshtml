@using Simba.Businness.Models.Admin
@model Condominio
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "AdminCondomini", FormMethod.Post))
{

    using (Html.DevExtreme().ValidationGroup())
    {
        @(Html.DevExtreme().TextBoxFor(m => m.Oid).ReadOnly(true))
        <div id="form-demo">
            <div class="widget-container">
                <div>Nuovo ticket:</div>
                <div>
                    <div>
                        <div>Code</div><div>@(Html.DevExtreme().TextBoxFor(m => m.Code))</div>
                    </div>
                    <div>
                        <div>Nome</div><div>@(Html.DevExtreme().TextBoxFor(m => m.NomeCondominio))</div>
                    </div>
                    <div>
                        <div>Indirizzo</div><div>@(Html.DevExtreme().TextBoxFor(m => m.Indirizzo))</div>
                    </div>
                    <div>
                        <div>Regione</div><div>
                            @(Html.DevExtreme().SelectBoxFor(m => m.Regione)
                            .ID("comboRegioni")
                            .DisplayExpr("Text")
                            .ValueExpr("Id")
                            .Value(Model.Regione)
                            .DataSource(ds => ds.WebApi()
                            .Controller("RegioniDati")
                            .LoadAction("Get").Key("Id"))
                            .OnValueChanged("onValueRegioneChanged")
                        )
                        </div>
                    </div>
                    <div>
                        <div>Provincia</div><div>
                            @(Html.DevExtreme().SelectBoxFor(m => m.Provincia)
                            .ID("comboProvince")
                            .DisplayExpr("Text")
                            .ValueExpr("Id")
                            .Value(Model.Provincia)
                            .DataSource(ds => ds.WebApi()
                            .Controller("ProvinceDati")
                            .LoadAction("Get")
                            .Key("Id"))
                            .OnValueChanged("onValueProvinciaChanged")

                        )
                        </div>
                    </div>
                    <div>
                        <div>Comune</div><div>
                            @(Html.DevExtreme().SelectBoxFor(m => m.Comune)
                            .ID("comboComuni")
                            .DisplayExpr("Text")
                            .ValueExpr("Id")
                            .Value(Model.Comune)
                            .DataSource(ds => ds.WebApi()
                            .Controller("ComuniDati")
                            .LoadAction("Get").Key("Id"))
                        )
                        </div>
                    </div>

                    <div>
                        <div>Latitudine</div><div>@(Html.DevExtreme().TextBoxFor(m => m.Latitudine).ID("Latitude").ReadOnly(true))</div>
                    </div>
                    <div>
                        <div>Longitudine</div><div>@(Html.DevExtreme().TextBoxFor(m => m.Longitudine).ID("Longitude").ReadOnly(true))</div>
                    </div>
                    <div>
                        @(Html.DevExtreme().Map()
                            .ID("map")
                            .Center("Roma, Italy")
                            .Zoom(8)
                            .Height(400)
                            .Width("100%")
                            .Controls(true)
                            .MarkerIconSrc(new JS("markerUrl"))
                            .OnClick("CondominioMapClicked")
                            .Provider(GeoMapProvider.Google)
                            // Specify your API keys for each map provider:
                            .ApiKey(k => k
                            //    .Bing("YOUR_BING_MAPS_API_KEY")
                            .Google("AIzaSyDznSU8wRpOjerYuXcmjoS9c2gqC4LqgM4")
                            //    .GoogleStatic("YOUR_GOOGLE_STATIC_MAPS_API_KEY")
                            )
                            .Type(GeoMapType.Roadmap)
)
                    </div>
                </div>
            </div>
        </div>

        @(Html.DevExtreme().ValidationSummary()
                .ID("summary")
        )

        @(Html.DevExtreme().Button()
                .ID("button")
                .Text("Salva")
                .Type(ButtonType.Success)
                .UseSubmitBehavior(true)
        )
     }
 }