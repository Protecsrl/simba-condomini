   private void acReportRdLListView_Execute(object sender, SimpleActionExecuteEventArgs e)
        {
            //IObjectSpace objectSpace =
            //                DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportObjectSpaceProvider.CreateObjectSpace(
            //                typeof(DevExpress.Persistent.BaseImpl.ReportDataV2));

            //DevExpress.ExpressApp.ReportsV2.IReportDataV2 reportData =
            //    objectSpace.FindObject<DevExpress.Persistent.BaseImpl.ReportDataV2>(
            //    CriteriaOperator.Parse("[DisplayName] = 'Report Interventi di Manutenzione'")); //'Contacts Report'

            //---------------------------------------------------------------------------
            IObjectSpace xpObjectSpace = View is ListView ? Application.CreateObjectSpace() : View.ObjectSpace;
            Session Sess = ((XPObjectSpace)ObjectSpace).Session;

            if (xpObjectSpace != null) // (reportData != null)
            {
                // hendol del report
                //string handle = DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportsStorage.GetReportContainerHandle(reportData);
                // filtro da imposare nel report         
                string CriterioAdd = string.Empty;
                string CommessaSG = string.Empty;
                int CommessaOID = 0;
                int CategoriaOID = 0;
                Type ObjectType = typeof(CAMS.Module.DBTask.RdL);
                GroupOperator criteriaOP2 = new GroupOperator(GroupOperatorType.Or);
                #region se è list view elabora i criteri di ricerca
                if (View is ListView)
                {
                    #region Parametri calcolo Report
                    int PrimoCodiceRdL = (((ListView)View).Editor).GetSelectedObjects()
                                                .Cast<RdLListView>().ToList<RdLListView>().Select(s => s.Codice).First();

                    RdL rdl = xpObjectSpace.GetObjectByKey<RdL>(PrimoCodiceRdL);
                    try
                    {
                        if (rdl.Apparato.Impianto.Edificio.Commesse != null)
                        {
                            CommessaSG = rdl.Edificio.Commesse.WBS.ToString();
                            CommessaOID = rdl.Apparato.Impianto.Edificio.Commesse.Oid;
                            CategoriaOID = rdl.Categoria.Oid;
                        }
                    }
                    catch
                    { }
                    #endregion

                    int ObjCount = (((ListView)View).Editor).GetSelectedObjects().Count;
                    if (ObjCount > 0)
                    {
                        if (ObjCount < 1000)
                        {
                            //var ArObjSel = (((ListView)View).Editor).GetSelectedObjects()
                            //                .Cast<RdLListView>().ToList<RdLListView>()
                            //               .Select(s => s.CodRegRdL).Distinct().ToArray<int>();

                            var ArObjSel = (((ListView)View).Editor).GetSelectedObjects()
                                                .Cast<RdLListView>().ToList<RdLListView>()
                                               .Select(s => s.Codice).Distinct().ToArray<int>();// codice è codiceRdL!!!

                            string sOids = String.Join(",", ArObjSel);
                            //CriterioAdd = string.Format("[Codice] In ({0})", String.Join(",", ArObjSel));
                            CriterioAdd = string.Format("[codiceRdL] In ({0})", String.Join(",", ArObjSel));
                            criteriaOP2.Operands.Add(CriteriaOperator.Parse(CriterioAdd));
                        }
                        else
                        {
                            //var ArObjSel = (((ListView)View).Editor).GetSelectedObjects().Cast<RdLListView>()
                            //    .ToList<RdLListView>()
                            //    .Select(s => s.CodRegRdL).Distinct().ToList<int>();

                            var ArObjSel = (((ListView)View).Editor).GetSelectedObjects().Cast<RdLListView>()
                                        .ToList<RdLListView>()
                                        .Select(s => s.Codice).Distinct().ToList<int>(); // codice è codiceRdL!!!

                            int numita = ObjCount / 1000;
                            for (var i = 1; i < numita + 1; i++)
                            {
                                int maxind = ArObjSel.Count;
                                int limitemin = (i * 1000) - 1000;
                                int limitemax = i * 1000;
                                if (limitemax > maxind)
                                    limitemax = maxind;
                                var output = ArObjSel.GetRange(limitemin, limitemax).ToArray();
                                string sOids = String.Join(",", output);
                                //CriterioAdd = string.Format("[Codice] In ({0})", String.Join(",", output));
                                CriterioAdd = string.Format("[codiceRdL] In ({0})", String.Join(",", output));
                                criteriaOP2.Operands.Add(CriteriaOperator.Parse(CriterioAdd));
                            }
                        }
                    }
                }
                #endregion
                string DisplayReportPersonale = "";
                try
                {

                    DisplayReportPersonale = Sess.Query<CAMS.Module.DBAngrafica.SetReportCommessa>()
                        .Where(w => w.Categoria.Oid == CategoriaOID && w.Commesse.Oid == CommessaOID && w.ObjectType == ObjectType)
                           .Select(s => s.DisplayReport)
                           .FirstOrDefault();
                }
                catch
                {
                    DisplayReportPersonale = "";
                }

                string CriterioReport = string.Empty;
                GroupOperator criteriaReport = new GroupOperator(GroupOperatorType.And);
                criteriaReport.Operands.Clear();

                string handle = "";

                IObjectSpace objectSpace =
                    DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportObjectSpaceProvider.CreateObjectSpace(
                    typeof(DevExpress.Persistent.BaseImpl.ReportDataV2));

                if (!string.IsNullOrEmpty(DisplayReportPersonale))
                {
                    //IObjectSpace objectSpace =
                    //            DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportObjectSpaceProvider.
                    //            CreateObjectSpace(typeof(DevExpress.Persistent.BaseImpl.ReportDataV2));
                    CriterioReport = string.Format("[DisplayName] = '{0}'", DisplayReportPersonale);
                    criteriaReport.Operands.Add(CriteriaOperator.Parse(CriterioReport));

                    DevExpress.ExpressApp.ReportsV2.IReportDataV2 reportData =
                                objectSpace.FindObject<DevExpress.Persistent.BaseImpl.ReportDataV2>(criteriaReport);
                    //   CriteriaOperator.Parse("[DisplayName] = 'Interventi di Manutenzione'"));  //   CriteriaOperator.Parse("[DisplayName] = 'Interventi di Manutenzione'"));  
                    handle = DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportsStorage.GetReportContainerHandle(reportData);
                }
                else
                {
                    //IObjectSpace objectSpace =
                    //            DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportObjectSpaceProvider.CreateObjectSpace(
                    //            typeof(DevExpress.Persistent.BaseImpl.ReportDataV2));
                    DevExpress.ExpressApp.ReportsV2.IReportDataV2 reportData =
                        objectSpace.FindObject<DevExpress.Persistent.BaseImpl.ReportDataV2>(
                        CriteriaOperator.Parse("[DisplayName] = 'Report Interventi di Manutenzione'")); //' Report Interventi di Manutenzione --> ex <<sub Report Interventi Manutenzione>>

                    handle = DevExpress.ExpressApp.ReportsV2.ReportDataProvider.ReportsStorage.GetReportContainerHandle(reportData);
                }
                // apri report
                Frame.GetController<DevExpress.ExpressApp.ReportsV2.ReportServiceController>().ShowPreview(handle, criteriaOP2);

            }
        }