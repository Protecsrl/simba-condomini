
        private void pupWinRisorseTeam_CustomizePopupWindowParams(object sender, CustomizePopupWindowParamsEventArgs e)
        {
            IObjectSpace xpObjectSpace = View is ListView ? Application.CreateObjectSpace() : View.ObjectSpace;
            if (xpObjectSpace != null)
            {
                if (View is DetailView)
                {
                    DetailView dv = (DetailView)View;
                    RdL rdl = (RdL)dv.CurrentObject;

                    #region carico vista da tabella persistente

                    CollectionSource ListRisorseTeamLookUp = (CollectionSource)
                        Application.CreateCollectionSource(xpObjectSpace, typeof(pcRdLRisorseTeam),
                                                           Application.GetListViewId(typeof(pcRdLRisorseTeam)),
                                                           true,
                                                           CollectionSourceMode.Normal);

                    ListRisorseTeamLookUp.Criteria.Clear();

                    GroupOperator criteriaRT = new GroupOperator(GroupOperatorType.And);
                    string CriterioAdd = string.Format("[OidEdificio] = ({0})", rdl.Edificio.Oid);
                    criteriaRT.Operands.Add(CriteriaOperator.Parse(CriterioAdd));
                    CriterioAdd = string.Format("[IsSmartPhone] = ({0})", rdl.UltimoStatoSmistamento.Oid);
                    criteriaRT.Operands.Add(CriteriaOperator.Parse(CriterioAdd));

                    ListRisorseTeamLookUp.Criteria["Filtro_ClusterEdifici"] = criteriaRT;
                    //SortProperty srtProperty = new DevExpress.Xpo.SortProperty("Conduttore", DevExpress.Xpo.DB.SortingDirection.Ascending);
                    //ListRisorseTeamLookUp.Sorting.Add(srtProperty);
                    //SortProperty srtProperty1 = new DevExpress.Xpo.SortProperty("Ordinamento", DevExpress.Xpo.DB.SortingDirection.Ascending);
                    //ListRisorseTeamLookUp.Sorting.Add(srtProperty1);
                    ListView lvk = Application.CreateListView(Application.GetListViewId(typeof(pcRdLRisorseTeam)), ListRisorseTeamLookUp, false);

                    string nuovotitolo = string.Format("Selezione RisorsaTeam per RdL: {0} ", rdl.Descrizione);
                    lvk.Caption = nuovotitolo;

                    if (!string.IsNullOrEmpty(rdl.RicercaRisorseTeam))
                    { //   Azienda Mansione  Telefono
                        ((ListView)lvk).Model.Filter = "";
                        string Filtro1 = string.Format("Contains(Upper([RisorsaCapo]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                        string Filtro2 = string.Format("Contains(Upper([Azienda]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                        string Filtro3 = string.Format("Contains(Upper([Mansione]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                        string Filtro4 = string.Format("Contains(Upper([Telefono]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                        string AllFilter = string.Format("{0} Or {1} Or {2} Or {3}", Filtro1, Filtro2, Filtro3, Filtro4);
                        ((ListView)lvk).Model.Filter = AllFilter;
                    }
                    var dc = Application.CreateController<DialogController>();
                    e.DialogController.SaveOnAccept = false;
                    e.View = lvk;
                }
                    #endregion

                //BindingList<npRdLRisorseTeam> objDCRisorseTeamRdL = new BindingList<npRdLRisorseTeam>();
                //objDCRisorseTeamRdL = DCRisorseTeamRdL_ObjectsGetting(rdl);
                /////////////
                #region non da la selezione
                //npRdLRisorseTeamList nprdlRisorseTeamList = new npRdLRisorseTeamList();
                //int duplicateId = 0;
                //foreach (var record in objDCRisorseTeamRdL)
                //{
                //    nprdlRisorseTeamList.npRdLRisorseTeams.Add(record);
                //    //    new npRdLRisorseTeam()
                //    //    {
                //    //         ID = duplicateId,
                //    //         Azienda = 
                //    //    });
                //    //duplicateId++;
                //}

                //DetailView detailView = Application.CreateDetailView(Application.CreateObjectSpace(), nprdlRisorseTeamList);
                //detailView.ViewEditMode = DevExpress.ExpressApp.Editors.ViewEditMode.View;
                //e.View = detailView;
                //e.DialogController.SaveOnAccept = false;
                //e.DialogController.CancelAction.Active["NothingToCancel"] = false;

                #endregion
                //////////////////////
                #region vecchio codice
                //NonPersistentObjectSpace objectSpace = new NonPersistentObjectSpace(XafTypesInfo.Instance);
                //IObjectSpace xpObjectSpace = View is ListView ? Application.CreateObjectSpace() : View.ObjectSpace;
                //IObjectSpace xpObjectSpace = Application.CreateObjectSpace();
                //           // NonPersistentObjectSpace objectSpace = (NonPersistentObjectSpace)Application.CreateObjectSpace(typeof(DCRisorseTeamRdL));
                //           NonPersistentObjectSpace objectSpace = new NonPersistentObjectSpace(XafTypesInfo.Instance);
                //e.View = Application.CreateListView(xpObjectSpace, typeof(npRdLRisorseTeam), true);
                //CollectionSource DCRisorseTeamRdL_Lookup = (CollectionSource)Application.CreateCollectionSource(objectSpace, typeof(DCRisorseTeamRdL),
                //                                                          "DCRisorseTeamRdL_LookupListView");
                //DCRisorseTeamRdL_Lookup.Add(objDCRisorseTeamRdL[0]);

                //ListView lvk = Application.CreateListView("DCRisorseTeamRdL_LookupListView", DCRisorseTeamRdL_Lookup, true);
                //e.View = lvk;

                //---------------------------
                //var ParCriteria = string.Empty;

                //if (!string.IsNullOrEmpty(rdl.RicercaRisorseTeam))
                //{ //   Azienda Mansione  Telefono
                //    ((ListView)lvk).Model.Filter = "";
                //    string Filtro1 = string.Format("Contains(Upper([RisorsaCapo]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                //    string Filtro2 = string.Format("Contains(Upper([Azienda]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                //    string Filtro3 = string.Format("Contains(Upper([Mansione]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                //    string Filtro4 = string.Format("Contains(Upper([Telefono]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
                //    string AllFilter = string.Format("{0} Or {1} Or {2} Or {3}", Filtro1, Filtro2, Filtro3, Filtro4);
                //    ((ListView)lvk).Model.Filter = AllFilter;
                //}
                //var dc = Application.CreateController<DevExpress.ExpressApp.SystemModule.DialogController>();
                //e.DialogController.SaveOnAccept = false;
                //e.View = lvk;
                #endregion
            }
        }


        private void pupWinRisorseTeam_Execute(object sender, PopupWindowShowActionExecuteEventArgs e)
        {
            IObjectSpace xpObjectSpace = View is ListView ? Application.CreateObjectSpace() : View.ObjectSpace;
            if (xpObjectSpace != null)
            {
                // System.Collections.IList selezione = e.SelectedObjects;
                if (View is DetailView)
                {
                    DetailView dv = (DetailView)View;
                    RdL rdl = (RdL)dv.CurrentObject;
                    int OidObjCurr = ((pcRdLRisorseTeam)(((e.PopupWindow)).View).SelectedObjects[0]).OidRisorsaTeam;
                    RisorseTeam RT = xpObjectSpace.GetObjectByKey<RisorseTeam>(OidObjCurr);
                    rdl.SetMemberValue("RisorseTeam", RT);
                }
            }
        }


		
        #region procedure non persistent
        //private BindingList<npRdLRisorseTeam> DCRisorseTeamRdL_ObjectsGetting(RdL rdl)
        //{
        //    BindingList<npRdLRisorseTeam> objects = new BindingList<npRdLRisorseTeam>();
        //    if (rdl.Edificio != null)
        //    {
        //        using (DB db = new DB())
        //        {
        //            int OidCObase = rdl.Edificio.CentroOperativoBase == null ? 0 : rdl.Edificio.CentroOperativoBase.Oid;
        //            objects = db.GetTeamRisorse_for_RdL(rdl.Edificio.Oid, rdl.UltimoStatoSmistamento.Oid, OidCObase, CAMS.Module.Classi.SetVarSessione.CorrenteUser);
        //        }
        //    }
        //    return objects;
        //}

        //private void Application_ObjectSpaceCreated(Object sender, ObjectSpaceCreatedEventArgs e)
        //{
        //    if (e.ObjectSpace is NonPersistentObjectSpace)
        //    {
        //        //e.ObjectSpace.Committing += ObjectSpace_Committing;
        //        ((NonPersistentObjectSpace)e.ObjectSpace).ObjectsGetting += ObjectSpace_ObjectsGetting;
        //        //((NonPersistentObjectSpace)e.ObjectSpace).ObjectByKeyGetting += ObjectSpace_ObjectByKeyGetting;
        //        //((NonPersistentObjectSpace)e.ObjectSpace).AdditionalObjectSpaces.Add(additionalObjectSpace);
        //        //((NonPersistentObjectSpace)e.ObjectSpace).ObjectsCountGetting += ObjectSpace_ObjectsCountGetting;
        //        //((NonPersistentObjectSpace)e.ObjectSpace).ObjectGetting += ObjectSpace_ObjectGetting;
        //        //e.ObjectSpace.Disposed += ObjectSpace_Disposed;
        //    }
        //}
        //private void Application_ViewCreated(Object sender, ViewCreatedEventArgs e)
        //{
        //    ObjectView objectView = e.View as ObjectView;
        //    if (objectView != null)
        //    {
        //        if ((objectView is ListView) && typeof(npRdLRisorseTeam).IsAssignableFrom(objectView.ObjectTypeInfo.Type))
        //        {
        //            ((ListView)objectView).CollectionSource.ResetCollection();
        //            //((ListView)objectView).CollectionSource.Add( new 
        //            ((NonPersistentObjectSpace)objectView.ObjectSpace).ObjectsGetting += ObjectSpace_ObjectsGetting;

        //            var mio = ((ProxyCollection)((ListView)objectView).CollectionSource.Collection).OriginalCollection;
        //            //mio.
        //            NonPersistentObjectSpace npobjectSpace = (NonPersistentObjectSpace)objectView.ObjectSpace;
        //            if (npobjectSpace is NonPersistentObjectSpace)
        //            {
        //                //e.ObjectSpace.Committing += ObjectSpace_Committing;
        //                ((NonPersistentObjectSpace)objectView.ObjectSpace).ObjectsGetting += ObjectSpace_ObjectsGetting;
        //                //((NonPersistentObjectSpace)e.ObjectSpace).ObjectByKeyGetting += ObjectSpace_ObjectByKeyGetting;
        //                //((NonPersistentObjectSpace)e.ObjectSpace).AdditionalObjectSpaces.Add(additionalObjectSpace);
        //                //((NonPersistentObjectSpace)e.ObjectSpace).ObjectsCountGetting += ObjectSpace_ObjectsCountGetting;
        //                //((NonPersistentObjectSpace)e.ObjectSpace).ObjectGetting += ObjectSpace_ObjectGetting;
        //                //e.ObjectSpace.Disposed += ObjectSpace_Disposed;
        //            }
        //        }
        //    }
        //}
        //private void ObjectSpace_ObjectsGetting(Object sender, ObjectsGettingEventArgs e)
        //{
        //    BindingList<npRdLRisorseTeam> objects = new BindingList<npRdLRisorseTeam>();
        //    objects.AllowNew = true;
        //    objects.AllowEdit = true;
        //    objects.AllowRemove = true;
        //    foreach (npRdLRisorseTeam obj in globalObjects)
        //    {
        //        if (e.ObjectType.IsAssignableFrom(obj.GetType()))
        //        {
        //            objects.Add(obj);
        //            obj.ObjectSpace = (IObjectSpace)sender;
        //        }
        //    }
        //    e.Objects = objects;
        //}
        #endregion


		
        //private void Application_ListViewCreating(Object sender, ListViewCreatingEventArgs e)
        //{
        //    if ((e.CollectionSource.ObjectTypeInfo.Type == typeof(DCRisorseTeamRdL)) && (e.CollectionSource.ObjectSpace is NonPersistentObjectSpace))
        //    {
        //        ((NonPersistentObjectSpace)e.CollectionSource.ObjectSpace).ObjectsGetting += ObjectSpace_ObjectsGetting;
        //    }
        //}

        //private void ObjectSpace_ObjectsGetting(Object sender, ObjectsGettingEventArgs e)
        //{
        //    BindingList<DCRisorseTeamRdL> objects = new BindingList<DCRisorseTeamRdL>();
        //    for (int i = 1; i < 10; i++)
        //    {
        //        objects.Add(new DCRisorseTeamRdL() { Azienda = string.Format("Object {0}", i) });
        //    }
        //    e.Objects = objects;
        //}






		


    //private void pWinRisorseTeamAltre_CustomizePopupWindowParams(object sender, CustomizePopupWindowParamsEventArgs e)
    //    {
    //        IObjectSpace xpObjectSpace = View is ListView ? Application.CreateObjectSpace() : View.ObjectSpace;
    //        if (xpObjectSpace != null)
    //        {
    //            if (View is DetailView)
    //            {
    //                DetailView dv = (DetailView)View;
    //                //RdL rdl = (RdL)dv.CurrentObject;
    //                RdLMultiRisorseTeam RdLMultiRisorseTeam = (RdLMultiRisorseTeam)dv.CurrentObject;
    //                RdL rdl = (RdL)RdLMultiRisorseTeam.RdL;

    //                CollectionSource ListRisorseTeamLookUp = (CollectionSource)
    //                    Application.CreateCollectionSource(xpObjectSpace, typeof(pcRdLRisorseTeam),
    //                                                       Application.GetListViewId(typeof(pcRdLRisorseTeam)),
    //                                                       true,
    //                                                       CollectionSourceMode.Normal);

    //                ListRisorseTeamLookUp.Criteria.Clear();

    //                GroupOperator criteriaRT = new GroupOperator(GroupOperatorType.And);
    //                string CriterioAdd = string.Format("[OidEdificio] = ({0})", rdl.Edificio.Oid);
    //                criteriaRT.Operands.Add(CriteriaOperator.Parse(CriterioAdd));
    //                CriterioAdd = string.Format("[IsSmartPhone] = ({0})", rdl.UltimoStatoSmistamento.Oid);
    //                criteriaRT.Operands.Add(CriteriaOperator.Parse(CriterioAdd));

    //                ListRisorseTeamLookUp.Criteria["Filtro_ClusterEdifici"] = criteriaRT;
    //                //SortProperty srtProperty = new DevExpress.Xpo.SortProperty("Conduttore", DevExpress.Xpo.DB.SortingDirection.Ascending);
    //                //ListRisorseTeamLookUp.Sorting.Add(srtProperty);
    //                //SortProperty srtProperty1 = new DevExpress.Xpo.SortProperty("Ordinamento", DevExpress.Xpo.DB.SortingDirection.Ascending);
    //                //ListRisorseTeamLookUp.Sorting.Add(srtProperty1);
    //                ListView lvk = Application.CreateListView(Application.GetListViewId(typeof(pcRdLRisorseTeam)), ListRisorseTeamLookUp, false);

    //                string nuovotitolo = string.Format("Selezione RisorsaTeam per RdL: {0} ", rdl.Descrizione);
    //                lvk.Caption = nuovotitolo;

    //                if (!string.IsNullOrEmpty(rdl.RicercaRisorseTeam))
    //                { //   Azienda Mansione  Telefono
    //                    ((ListView)lvk).Model.Filter = "";
    //                    string Filtro1 = string.Format("Contains(Upper([RisorsaCapo]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //                    string Filtro2 = string.Format("Contains(Upper([Azienda]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //                    string Filtro3 = string.Format("Contains(Upper([Mansione]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //                    string Filtro4 = string.Format("Contains(Upper([Telefono]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //                    string AllFilter = string.Format("{0} Or {1} Or {2} Or {3}", Filtro1, Filtro2, Filtro3, Filtro4);
    //                    ((ListView)lvk).Model.Filter = AllFilter;
    //                }
    //                var dc = Application.CreateController<DialogController>();
    //                e.DialogController.SaveOnAccept = false;
    //                e.View = lvk;
    //            }

    //            //if (View is DetailView)
    //            //{
    //            //    NonPersistentObjectSpace objectSpace = new NonPersistentObjectSpace(XafTypesInfo.Instance);
    //            //    objectSpace.ObjectsGetting += objectSpace_ObjectsGetting;

    //            //    CollectionSource DCRisorseTeamRdL_Lookup = (CollectionSource)Application.CreateCollectionSource(objectSpace, typeof(DCRisorseTeamRdL),
    //            //                                                                "DCRisorseTeamRdL_LookupListView");
    //            //    //  filtro
    //            //    DetailView dv = (DetailView)View;
    //            //    RdLMultiRisorseTeam RdLMultiRisorseTeam = (RdLMultiRisorseTeam)dv.CurrentObject;
    //            //    RdL rdl = (RdL)RdLMultiRisorseTeam.RdL;
    //            //    var ParCriteria = string.Empty;

    //            //    ListView lvk = Application.CreateListView("DCRisorseTeamRdL_LookupListView", DCRisorseTeamRdL_Lookup, true);    

    //            //    if (!string.IsNullOrEmpty(rdl.RicercaRisorseTeam))
    //            //    { //   Azienda Mansione  Telefono
    //            //        ((ListView)lvk).Model.Filter = "";
    //            //        string Filtro1 = string.Format("Contains(Upper([RisorsaCapo]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //            //        string Filtro2 = string.Format("Contains(Upper([Azienda]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //            //        string Filtro3 = string.Format("Contains(Upper([Mansione]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //            //        string Filtro4 = string.Format("Contains(Upper([Telefono]),'{0}')", rdl.RicercaRisorseTeam.ToUpper());
    //            //        string AllFilter = string.Format("{0} Or {1} Or {2} Or {3}", Filtro1, Filtro2, Filtro3, Filtro4);
    //            //        ((ListView)lvk).Model.Filter = AllFilter;
    //            //    }
    //            //    var dc = Application.CreateController<DevExpress.ExpressApp.SystemModule.DialogController>();
    //            //    e.DialogController.SaveOnAccept = false;
    //            //    e.View = lvk;
    //            //}
    //        }
    //    }


	protected override CollectionSourceBase CreateCollectionSourceCore(DevExpress.ExpressApp.ObjectSpace objectSpace, Type objectType, string listViewID) {

            CollectionSourceBase cs = null;

            switch (listViewID) {

                case "Customer_ListView_Linq":

                    XPQuery<Customer> customers = new XPQuery<Customer>(objectSpace.Session);

                    var queryCustomers = from c in customers

                                         where (c.Country == "Germany" && c.ContactTitle == "Sales Representative")

                                         orderby c.ContactName

                                         select c;

                    cs = new LinqCollectionSource(objectSpace, objectType, queryCustomers);

                    break;

                case "Order_ListView_Linq":

                    XPQuery<Order> orders = new XPQuery<Order>(objectSpace.Session);

                    var queryOrders = from o in orders

                                      orderby o.Employee.FirstName ascending

                                      group o by o.Employee.FirstName + " " + o.Employee.LastName into oo

                                      where oo.Sum(o => o.Freight) > 10000

                                      select new

                                      {

                                          Employee_Linq = oo.Key,

                                          Orders_Sum_Linq = oo.Sum(o => o.Freight)

                                      };

                    cs = new LinqCollectionSource(objectSpace, objectType, queryOrders);

                    break;

                case "Employee_ListView_Linq":

                    XPQuery<Employee> employees = new XPQuery<Employee>(objectSpace.Session);

                    var queryEmployees = from e in employees

                                         select new

                                         {

                                             FullName = e.FirstName + " " + e.LastName,

                                             Orders_Max_Linq = e.Orders.Max(o => o.Freight)

                                         };



                    cs = new LinqCollectionSource(objectSpace, objectType, queryEmployees);

                    break;

                default:

                    cs = base.CreateCollectionSourceCore(objectSpace, objectType, listViewID);

                    break;

            }

            return cs;

        }